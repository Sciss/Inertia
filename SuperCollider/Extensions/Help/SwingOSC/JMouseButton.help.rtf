{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf420
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;\f2\fnil\fcharset77 Monaco;
}
{\colortbl;\red255\green255\blue255;\red86\green77\blue133;\red191\green0\blue0;\red0\green0\blue191;
}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs26 \cf2 SwingOSC \'d0 Java-based cross-platform replacements for Cocoa GUI classes\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0\fs24 \cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\fs22 \cf2 This class is meant as an emulation of the MouseButton UGen. last mod: 25-apr-06 sciss\
This class replaces the UGen by a control bus reader. It does not really track the mouse\
button ; instead you can write the virtual mouse button states (0 or 1) onto this control bus\
or use a GUI panel as shown in the example code below.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf2 no-op / not working\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0 \cf2 	
\f0\b \
different behaviour\

\f1\b0 	class				this is not a UGen subclass, so in rare circumstances there are incompatibilities\
	
\f0\b 	\
extended functionality\
\
known issues / todo\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\fs36 \cf0 \
JMouseButton
\f1\b0\fs24 		
\f0\b  mouse button ugen
\f1\b0 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\tx7280\tx7840\ql\qnatural

\f0\b \cf0 Note: please use the abstraction layer GUI.mouseButton if possible! (see [\ul GUI\ulnone ])\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0 \cf0 \
superclass: UGen\
\
\
	
\f0\b *kr(minval, maxval, lag)
\f1\b0 \
	\
	
\f0\b minval			
\f1\b0 value when the key is not pressed
\f0\b \
	maxval			
\f1\b0 value when the key is pressed\
	\
	
\f0\b lag
\f1\b0 				lag factor\
	\
	see also [
\f0\b \ul JMouseX\ulnone ]
\f1\b0 , [
\f0\b \ul JMouseY\ulnone ]
\f2\b0\fs18 \
	\
	 \
	\
	\cf3 //example\cf0 \
	\
	s.boot;\
\
	\{ \cf4 SinOsc\cf0 .ar(\cf4 JMouseButton\cf0 .kr(400, 440, 0.1), 0, 0.1) \}.play;\
	\{ \cf4 SinOsc\cf0 .ar(\cf4 JMouseButton\cf0 .kr(400, 740, 2), 0, 0.1) \}.play;\
\
	\cf4 JMouseButton\cf0 .set( 1 );\
	\cf4 JMouseButton\cf0 .set( 0 );\
\
	\cf3 // or use a GUI to control (requires SwingOSC server running)\cf0 \
	\cf4 JMouseBase\cf0 .makeGUI; \cf3 // optional arg is panel size!\
	}