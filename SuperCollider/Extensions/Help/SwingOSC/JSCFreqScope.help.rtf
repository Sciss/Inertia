{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf420
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;\f2\fnil\fcharset77 Monaco;
}
{\colortbl;\red255\green255\blue255;\red86\green77\blue133;\red191\green0\blue0;\red0\green0\blue191;
\red96\green96\blue96;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs26 \cf2 SwingOSC \'d0 Java-based cross-platform replacements for Cocoa GUI classes\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0\fs24 \cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\fs22 \cf2 This class is meant as an emulation of SCFreqScope by Lance Putnam, which is an additional class\
available from here: [\cf2 \ul \ulc2 http://www.uweb.ucsb.edu/~ljputnam/sc3.html]
\fs24 \cf0 \ulnone  . 
\fs22 \cf2 last mod: 03-oct-06 sciss\
; for bugs and different behaviour, see also the [\ul JStethoscope\ulnone ] help file.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf2 no-op / not working\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0 \cf2 	
\f0\b \
different behaviour\
	\
extended functionality\
	\
known issues / todo\

\f1\b0 	tcp transport			doesn't work with scsynth in TCP transport\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 \
JSCFreqScope			frequency analysis view\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\tx7280\tx7840\ql\qnatural

\fs24 \cf0 Note: please use the abstraction layer GUI.freqScopeView if possible! (see [\ul GUI\ulnone ])\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 \
JSCFreqScope.new(parent, bounds)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0 \cf0 \
JSCFreqScope shows the frequency spectrum of a specified audio bus.  The scope will\
remain active after a command-period.  To turn it off you must use the 'active' method.\
\
Public methods:\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf0 kill()
\f1\b0 \

\f0\b Very important.
\f1\b0   This must be run when the parent window is closed to avoid problems.\
It also frees the buffers that the scope allocated and stops the FFT analysis synth.\
\

\f0\b active_(Boolean)
\f1\b0 \
Turns the scope on if true or off if false.  When the scope is turned on for the first time,\
it will send SynthDefs to the internal server, allocate the FFT and scope buffers, and\
start the FFT analysis synth.  After that, only the FFT synth will be turned on and off.\
\

\f0\b dbRange_(Integer)
\f1\b0 \
Determines the amplitude range.  This sets the lowest negative decibel reading.\
\

\f0\b freqMode_(Integer)
\f1\b0 \
Can be either 0 or 1.  0 displays frequencies on a linear scale and 1 displays frequencies\
on a logarithmic or equally spaced octave scale.\
\

\f0\b inBus_(Integer)
\f1\b0 \
Change the bus number to analyze.\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf3 //// Start internal server\cf0 \
\cf3 //s = Server.internal.boot;\cf0 \
\cf3 // Start local server for SwingOSC!\cf0 \
s = \cf4 Server\cf0 .local.boot;\
\
\cf3 // Create analyzer in a window\cf0 \
(\
w = \cf4 JSCWindow\cf0 (\cf5 "My Analyzer"\cf0 , \cf4 Rect\cf0 (0, 0, 511, 300)); \cf3 // width should be 511\cf0 \
f = \cf4 JSCFreqScope\cf0 (w, w.view.bounds);\
f.active_(\cf4 true\cf0 ); 	\cf3 // turn it on the first time;\cf0 \
\
w.onClose_(\{ f.kill \});  \cf3 // you must have this\cf0 \
w.front;\
)\
\
\{ \cf4 SinOsc\cf0 .ar([500, 1000], 0, 0.25) \}.play(s);  \cf3 // start two sine waves\cf0 \
\
f.freqMode_(1);		\cf3 // change to log scale so we can see them\cf0 \
f.inBus_(1);			\cf3 // look at bus 1\cf0 \
f.dbRange_(200);		\cf3 // expand amplitude range\cf0 \
f.active_(\cf4 false\cf0 );		\cf3 // turn scope off (watch CPU)\cf0 \
f.active_(\cf4 true\cf0 );		\cf3 // turn it back on		\cf0 		\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\fs24 \cf0 \
Now press command-period.  The scope is still running.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\fs18 \cf0 \{ \cf4 SinOsc\cf0 .ar([500, 1000], 0, 0.25) \}.play(s);  \cf3 // start sines again
\fs24 \cf0 \
\
Close window and scope is killed.\
}