{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf410
{\fonttbl\f0\fnil\fcharset77 Monaco;\f1\fswiss\fcharset77 Helvetica;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red0\green0\blue0;\red0\green115\blue0;
\red191\green0\blue0;\red0\green0\blue191;\red0\green115\blue0;\red191\green0\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs18 \cf2 Franzie\cf3 .bootMIO\
\cf2 Klank\cf3 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f1\fs24 \cf3 y = (\cf2 SynthDef\cf3 (\cf4 'DialecticalBirkenhead'\cf3 , \{\cf2 |out= 0, amp= 1|\cf3  \cf2 Out\cf3 .ar(out, \cf2 SinOsc\cf3 .ar(\cf2 Pulse\cf3 .ar(\cf2 LFClipNoise\cf3 .kr(\cf2 LFPar\cf3 .kr(4.073650605846101, 1.1900708675384521).exprange(15.128630018234, 4.0310729861259)).exprange(10885.983757973, 8618.9040088654)).exprange(8830.0030851364, 13758.219749928)).range(-1, 1)*amp)\}).play(s))\
\
y = (\cf2 SynthDef\cf3 (\cf4 'BoltheadingStibium'\cf3 , \{\cf2 |out= 0, amp= 1|\cf3  \cf2 Out\cf3 .ar(out, \cf2 SinOsc\cf3 .ar(\cf2 Saw\cf3 .ar(236.8047659488767, 0.44683723738699244, 0.829054138877175).exprange(2851.8072915077, 19617.766096592)).range(-1, 1).perform(\cf4 'min'\cf3 , \cf2 LFClipNoise\cf3 .ar(21.63735644548361).range(-0.69784450531006, 0.52837800979614))*amp)\}).play(s))\
\
y = (\cf2 SynthDef\cf3 (\cf4 'MicrocellularSoliciting'\cf3 , \{\cf2 |out= 0, amp= 1|\cf3  \cf2 Out\cf3 .ar(out, \cf2 SinOsc\cf3 .ar(\cf2 LFPulse\cf3 .ar(\cf2 LFDClipNoise\cf3 .kr(\cf2 Crackle\cf3 .kr(\cf2 SinOsc\cf3 .kr(\cf2 LFNoise1\cf3 .kr.exprange(2.6018972754478, 4.012377166748)).range(1.6219574213028, 1.6573997735977)).exprange(4.9585550069809, 14.417887604237)).exprange(10485.629107952, 14375.108747482)).exprange(6491.2453985214, 19742.167594433)).range(-1, 1)*amp)\}).play(s))\
\
y = (\cf2 SynthDef\cf3 (\cf4 'PseudoprimitiveBoar'\cf3 , \{\cf2 |out= 0, amp= 1|\cf3  \cf2 Out\cf3 .ar(out, \cf2 SinOsc\cf3 .ar(\cf2 Formant\cf3 .ar(67.70378202018026, 316.27367084346815, \cf2 LFDNoise3\cf3 .kr(\cf2 LFSaw\cf3 .kr(\cf2 SyncSaw\cf3 .kr(0.4616651310382056).exprange(9.2946827292442, 12.658115434647)).exprange(9.531432390213, 0.65608260631561)).exprange(8870.7938194275, 431.52053594589)).exprange(12078.689966202, 2918.2214474678)).range(-1, 1)*amp)\}).play(s))\
\
y = (\cf2 SynthDef\cf3 (\cf4 'DorsocentralEffectuality'\cf3 , \{\cf2 |out= 0, amp= 1|\cf3  \cf2 Out\cf3 .ar(out, \cf2 SinOsc\cf3 .ar(\cf2 Pulse\cf3 .ar(\cf2 LFDClipNoise\cf3 .kr(\cf2 FSinOsc\cf3 .kr(\cf2 LFDNoise0\cf3 .kr.exprange(2.329015648365, 5.6658576369286)).exprange(5.7524713993073, 7.1688629746437)).exprange(17493.377699852, 12252.056541443)).exprange(20, 1514.5543074608)).range(-1, 1)*amp)\}).play(s))\
\
y = (\cf2 SynthDef\cf3 (\cf4 'OftnessDistractedly'\cf3 , \{\cf2 |out= 0, amp= 1|\cf3  \cf2 Out\cf3 .ar(out, \cf2 SinOsc\cf3 .ar(\cf2 Pulse\cf3 .ar(\cf2 LFSaw\cf3 .kr(\cf2 FSinOsc\cf3 .kr(3.747170783231779, 0.9187963008880615).exprange(14.026722478867, 1.3088516116142)).exprange(9091.1009407043, 6919.2980194092)).exprange(5773.7288256106, 19528.38065505)).range(-1, 1)*amp)\}).play(s))\
\
y = (\cf2 SynthDef\cf3 (\cf4 'FloodmarkUnmediated'\cf3 , \{\cf2 |out= 0, amp= 1|\cf3  \cf2 Out\cf3 .ar(out, \cf2 SinOsc\cf3 .ar(\cf2 Saw\cf3 .ar(\cf2 Impulse\cf3 .kr(\cf2 LFNoise1\cf3 .kr(12.846470237142448, \cf2 SinOsc\cf3 .kr(\cf2 LFDNoise0\cf3 .kr.exprange(4.8213455796242, 9.5914839029312)).range(0.15152990818024, 0.094544172286987)).exprange(4.6998263120651, 6.6200489878654)).exprange(5295.0951051712, 12935.531184673)).exprange(8264.0452421899, 19677.363536358)).range(-1, 1)*amp)\}).play(s))\
\
y = (\cf2 SynthDef\cf3 (\cf4 'ThermodynamicistReinterchange'\cf3 , \{\cf2 |out= 0, amp= 1|\cf3  \cf2 Out\cf3 .ar(out, \cf2 SinOsc\cf3 .ar(\cf2 Pulse\cf3 .ar(4092.613120303491, \cf2 Impulse\cf3 .kr(\cf2 SyncSaw\cf3 .kr(\cf2 FSinOsc\cf3 .kr(\cf2 Line\cf3 .kr(2261.8961334228516, 5923.852920532227).exprange(17.905752718449, 6.5902675747871)).exprange(12.133239972591, 13.562456011772)).exprange(5.0877082228661, 4.9762544751167)).range(0.47346186637878, 0.77896022796631)).exprange(1282.6335215569, 19043.487529755)).range(-1, 1)*amp)\}).play(s))\
\
y = (\cf2 SynthDef\cf3 (\cf4 'StringencyPreinflection'\cf3 , \{\cf2 |out= 0, amp= 1|\cf3  \cf2 Out\cf3 .ar(out, \cf2 SinOsc\cf3 .ar(\cf2 Formant\cf3 .ar(\cf2 LFClipNoise\cf3 .kr(\cf2 LFNoise2\cf3 .kr(\cf2 LFPulse\cf3 .kr(3.885018231821549, \cf2 LFPulse\cf3 .kr(\cf2 LFSaw\cf3 .kr(0.9327606842459736, 0.3368704319000244).exprange(1.3561450839043, 16.871727538109)).range(0.70975315570831, 0.48771488666534)).exprange(0.49917863607407, 12.011575996876)).exprange(13.635697317123, 17.799385106564)).exprange(19476.80393219, 5614.4018101692)).exprange(503.95591148455, 17141.464130878)).range(-1, 1)*amp)\}).play(s))\
\
y = (\cf2 SynthDef\cf3 (\cf4 'LustrelessReceder'\cf3 , \{\cf2 |out= 0, amp= 1|\cf3  \cf2 Out\cf3 .ar(out, \cf2 SinOsc\cf3 .ar(\cf2 Saw\cf3 .ar(\cf2 BrownNoise\cf3 .kr(\cf2 LFPar\cf3 .kr(\cf2 LFNoise0\cf3 .kr(2.3321529414168967, 0.10901248455047609).exprange(12.337117159367, 13.717201220989)).range(0.14796626567841, 0.62266230583191)).exprange(9431.6104435921, 14194.282369614)).exprange(723.5537071228, 4939.3897080421)).range(-1, 1)*amp)\}).play(s))\
\
y = (\cf2 SynthDef\cf3 (\cf4 'KneaderSnee'\cf3 , \{\cf2 |out= 0, amp= 1|\cf3  \cf2 Out\cf3 .ar(out, \cf2 SinOsc\cf3 .ar(\cf2 LFTri\cf3 .ar(\cf2 Pulse\cf3 .ar(\cf2 LFNoise1\cf3 .ar.exprange(6907.3509025574, 916.96028470993)).exprange(7814.762532711, 17008.38572979)).exprange(899.76963162422, 5784.4645884037)).range(-1, 1)*amp)\}).play(s))\
\
\
(\cf2 SynthDef\cf3 (\cf4 'PreinspectionXerasia'\cf3 , \{\cf2 |out= 0, amp= 1|\cf3  \cf2 Out\cf3 .ar(out, \cf2 SinOsc\cf3 .ar(\cf2 Pulse\cf3 .ar(\cf2 LFDNoise0\cf3 .ar(\cf2 FSinOsc\cf3 .ar(274.82975033762693, 0.337133526802063).exprange(19562.272500992, 11195.48220396)).exprange(17001.771466732, 2737.1259260178)).exprange(14010.690720081, 975.03813505173)).range(-1, 1)*amp)\}).play(s))\
\
y = (\cf2 SynthDef\cf3 (\cf4 'BoltheadingStibium'\cf3 , \{\cf2 |out= 0, amp= 1|\cf3  \cf2 Out\cf3 .ar(out, \cf2 SinOsc\cf3 .ar(\cf2 Saw\cf3 .ar(236.8047659488767, 0.44683723738699244, 0.829054138877175).exprange(2851.8072915077, 19617.766096592)).range(-1, 1).perform(\cf4 'min'\cf3 , \cf2 LFClipNoise\cf3 .ar(21.63735644548361).range(-0.69784450531006, 0.52837800979614))*amp)\}).play(s))\
\
y = (\cf2 SynthDef\cf3 (\cf4 'BunnyChiasmodon'\cf3 , \{\cf2 |out= 0, amp= 1|\cf3  \cf2 Out\cf3 .ar(out, \cf2 SinOsc\cf3 .ar(\cf2 Pulse\cf3 .ar(\cf2 SinOsc\cf3 .ar(\cf2 LFPar\cf3 .kr(\cf2 Line\cf3 .kr(\cf2 LFDClipNoise\cf3 .kr.range(7195.7659721375, 15425.386428833)).exprange(11.474647057056, 3.2561584353447)).exprange(17026.151587963, 13097.741401196)).exprange(7788.0029916763, 813.53769540787)).exprange(13261.311626434, 8015.696079731)).range(-1, 1)*amp)\}).play(s))\
\
y = (\cf2 SynthDef\cf3 (\cf4 'PseudoprimitiveBoar'\cf3 , \{\cf2 |out= 0, amp= 1|\cf3  \cf2 Out\cf3 .ar(out, \cf2 SinOsc\cf3 .ar(\cf2 Formant\cf3 .ar(67.70378202018026, 316.27367084346815, \cf2 LFDNoise3\cf3 .kr(\cf2 LFSaw\cf3 .kr(\cf2 SyncSaw\cf3 .kr(0.4616651310382056).exprange(9.2946827292442, 12.658115434647)).exprange(9.531432390213, 0.65608260631561)).exprange(8870.7938194275, 431.52053594589)).exprange(12078.689966202, 2918.2214474678)).range(-1, 1)*amp)\}).play(s))\
\
y = (\cf2 SynthDef\cf3 (\cf4 'SparkletRifty'\cf3 , \{\cf2 |out= 0, amp= 1|\cf3  \cf2 Out\cf3 .ar(out, \cf2 SinOsc\cf3 .ar(\cf2 SinOscFB\cf3 .ar(3470.5576106640947, 0.17816081191554214, \cf2 LFNoise0\cf3 .ar(614.1451177901979, \cf2 Vibrato\cf3 .ar(\cf2 LFNoise2\cf3 .ar.exprange(19612.018809319, 14980.336444378)).range(0.32902801036835, 0.68674957752228)).range(0.65675187110901, 0.8890209197998)).exprange(4086.371281147, 5797.3098826408)).range(-1, 1)*amp)\}).play(s))\
\
y = (\cf2 SynthDef\cf3 (\cf4 'DorsocentralEffectuality'\cf3 , \{\cf2 |out= 0, amp= 1|\cf3  \cf2 Out\cf3 .ar(out, \cf2 SinOsc\cf3 .ar(\cf2 Pulse\cf3 .ar(\cf2 LFDClipNoise\cf3 .kr(\cf2 FSinOsc\cf3 .kr(\cf2 LFDNoise0\cf3 .kr.exprange(2.329015648365, 5.6658576369286)).exprange(5.7524713993073, 7.1688629746437)).exprange(17493.377699852, 12252.056541443)).exprange(20, 1514.5543074608)).range(-1, 1)*amp)\}).play(s))\
\
y = (\cf2 SynthDef\cf3 (\cf4 'HotheadedlyAdmixture'\cf3 , \{\cf2 |out= 0, amp= 1|\cf3  \cf2 Out\cf3 .ar(out, \cf2 SinOsc\cf3 .ar(\cf2 Formant\cf3 .ar(\cf2 GrayNoise\cf3 .kr(\cf2 Impulse\cf3 .kr(0.21467797752099096, \cf2 LFClipNoise\cf3 .kr.range(0.3949830532074, 0.35216581821442)).range(0.90069842338562, 0.6854043006897)).exprange(2277.3691439629, 17828.061316013)).exprange(311.54950309778, 19316.050187349)).range(-1, 1)*amp)\}).play(s))\
\
y = (\cf2 SynthDef\cf3 (\cf4 'MumperAppealable'\cf3 , \{\cf2 |out= 0, amp= 1|\cf3  \cf2 Out\cf3 .ar(out, \cf2 SinOsc\cf3 .ar(\cf2 Formant\cf3 .ar(\cf2 Saw\cf3 .ar(\cf2 LFSaw\cf3 .ar(\cf2 Impulse\cf3 .kr(\cf2 LFDNoise0\cf3 .kr.exprange(4.2583810329437, 17.074788665771)).exprange(212.09706306458, 9970.9503626823)).exprange(18077.354962826, 5970.7050395012)).exprange(17219.722986221, 1730.1502251625)).exprange(905.29088592529, 10877.063910961)).range(-1, 1)*amp)\}).play(s))\
\
y = (\cf2 SynthDef\cf3 (\cf4 'UnreconcilablyLaplander'\cf3 , \{\cf2 |out= 0, amp= 1|\cf3  \cf2 Out\cf3 .ar(out, \cf2 SinOsc\cf3 .ar(\cf2 Pulse\cf3 .ar(\cf2 Impulse\cf3 .kr(\cf2 Dust\cf3 .kr(\cf2 LFDNoise0\cf3 .kr(\cf2 Dust\cf3 .kr(\cf2 LFTri\cf3 .kr(2.3207269576712495, 1.309208869934082, 0.6205825805664062).exprange(17037.69141674, 13981.635122299)).exprange(6.6556851506233, 18.098876428604)).exprange(3580.2074766159, 5821.2517523766)).exprange(10.816042280197, 6.0035542845726)).exprange(8029.2342400551, 14995.68239212)).exprange(634.36201537261, 19645.161578655)).range(-1, 1)*amp)\}).play(s))\
\
y =(\cf2 SynthDef\cf3 (\cf4 'MoluccanAlluringness'\cf3 , \{\cf2 |out= 0, amp= 1|\cf3  \cf2 Out\cf3 .ar(out, \cf2 SinOsc\cf3 .ar(\cf2 SinOscFB\cf3 .ar(\cf2 Vibrato\cf3 .kr(\cf2 LFCub\cf3 .kr(2.067100309027798, \cf2 Crackle\cf3 .kr(1.966742905703458, \cf2 SinOscFB\cf3 .kr(9.556654862082667, 0.7778888940811156).range(0.96134126186371, 0.51466953754425)).range(0.76993775367737, 0.38083457946777)).exprange(4.3040139198303, 15.216679000854)).exprange(1799.029545784, 7267.0196175575)).exprange(325.15005313326, 11385.695261955)).range(-1, 1)*amp)\}).play(s))\
\
y = (\cf2 SynthDef\cf3 (\cf4 'ConcentusUncrusted'\cf3 , \{\cf2 |out= 0, amp= 1|\cf3  \cf2 Out\cf3 .ar(out, \cf2 SinOsc\cf3 .ar(\cf2 Pulse\cf3 .ar(421.167336016311, \cf2 FSinOsc\cf3 .kr(0.10377931436632533, 0.7951765349417022, \cf2 LFNoise1\cf3 .kr(3.225262217682728, 0.10178887844085692).range(0.96036660671234, 0.42888045310974)).range(0.61278569698334, 0.72042179107666)).exprange(119.98476106208, 19859.09976244)).range(-1, 1)*amp)\}).play(s))\
\
y = (\cf2 SynthDef\cf3 (\cf4 'RedesignPolyesthetic'\cf3 , \{\cf2 |out= 0, amp= 1|\cf3  \cf2 Out\cf3 .ar(out, \cf2 SinOsc\cf3 .ar(\cf2 SinOscFB\cf3 .ar(222.5110609404171, \cf2 LFSaw\cf3 .kr(\cf2 PinkNoise\cf3 .kr(0.017853577931722004, 0.1160733699798584).exprange(14.723705756664, 8.9021488070488)).range(0.92265129089355, 0.39499652385712)).exprange(318.23692886718, 12940.678257942)).range(-1, 1)*amp)\}).play(s))\
\
\
y = (\cf2 SynthDef\cf3 (\cf4 'HotheadedlyAdmixture'\cf3 , \{ \cf2 arg\cf3  out= 0, amp= 1; \cf2 var\cf3  x; x = \cf2 SinOsc\cf3 .ar(\cf2 Pulse\cf3 .ar(\cf2 LFClipNoise\cf3 .kr(\cf2 LFPar\cf3 .kr(4.073650605846101, 1.1900708675384521).exprange(15.128630018234, 4.0310729861259)).exprange(10885.983757973, 8618.9040088654)).exprange(8830.0030851364, 13758.219749928)).range(-1, 1)*amp; \cf2 Out\cf3 .ar(out, \cf2 SinOsc\cf3 .ar(\cf2 Formant\cf3 .ar(\cf2 GrayNoise\cf3 .kr(\cf2 Impulse\cf3 .kr(0.21467797752099096, \cf2 LFClipNoise\cf3 .kr.range(0.3949830532074, 0.35216581821442)).range(0.90069842338562, 0.6854043006897)).exprange(2277.3691439629, 17828.061316013)).exprange(311.54950309778, 19316.050187349)).range(-1, 1)*x)\}).play(s))\
\
y = (\cf2 SynthDef\cf3 (\cf4 'HotheadedlyAdmixture'\cf3 , \{ \cf2 arg\cf3  out= 0, amp= 1; \cf2 var\cf3  x; x = \cf2 SinOsc\cf3 .ar(\cf2 Pulse\cf3 .ar(\cf2 LFClipNoise\cf3 .kr(\cf2 LFPar\cf3 .kr(4.073650605846101, 1.1900708675384521).exprange(15.128630018234, 4.0310729861259)).exprange(10885.983757973, 8618.9040088654)).exprange(8830.0030851364, 13758.219749928)).range(-1, 1)*amp; \cf2 Out\cf3 .ar(out, \cf2 SinOsc\cf3 .ar(\cf2 Pulse\cf3 .ar(\cf2 LFDClipNoise\cf3 .kr(\cf2 FSinOsc\cf3 .kr(\cf2 LFDNoise0\cf3 .kr.exprange(2.329015648365, 5.6658576369286)).exprange(5.7524713993073, 7.1688629746437)).exprange(17493.377699852, 12252.056541443)).exprange(20, 1514.5543074608)).range(-1, 1)*x)\}).play(s))\
\
y = (\cf2 SynthDef\cf3 (\cf4 'HotheadedlyAdmixture'\cf3 , \{ \cf2 arg\cf3  out= 0, amp= 1; \cf2 var\cf3  x; x = \cf2 SinOsc\cf3 .ar(\cf2 Pulse\cf3 .ar(\cf2 LFClipNoise\cf3 .kr(\cf2 LFPar\cf3 .kr(4.073650605846101, 1.1900708675384521).exprange(15.128630018234, 4.0310729861259)).exprange(10885.983757973, 8618.9040088654)).exprange(8830.0030851364, 13758.219749928)).range(-1, 1)*amp; x = \cf2 SinOsc\cf3 .ar(\cf2 Pulse\cf3 .ar(\cf2 LFDClipNoise\cf3 .kr(\cf2 FSinOsc\cf3 .kr(\cf2 LFDNoise0\cf3 .kr.exprange(2.329015648365, 5.6658576369286)).exprange(5.7524713993073, 7.1688629746437)).exprange(17493.377699852, 12252.056541443)).exprange(20, 1514.5543074608)).range(-1, 1)*x; \cf2 Out\cf3 .ar(out, \cf2 SinOsc\cf3 .ar(\cf2 Saw\cf3 .ar(236.8047659488767, 0.44683723738699244, 0.829054138877175).exprange(2851.8072915077, 19617.766096592)).range(-1, 1).perform(\cf4 'min'\cf3 , \cf2 LFClipNoise\cf3 .ar(21.63735644548361).range(-0.69784450531006, 0.52837800979614))*x)\}).play(s))\
\
y = (\cf2 SynthDef\cf3 (\cf4 'HotheadedlyAdmixture'\cf3 , \{ \cf2 arg\cf3  out= 0, amp= 1; \cf2 var\cf3  x; x = \cf2 SinOsc\cf3 .ar(\cf2 Pulse\cf3 .ar(\cf2 LFClipNoise\cf3 .kr(\cf2 LFPar\cf3 .kr(4.073650605846101, 1.1900708675384521).exprange(15.128630018234, 4.0310729861259)).exprange(10885.983757973, 8618.9040088654)).exprange(8830.0030851364, 13758.219749928)).range(-1, 1)*amp; x = \cf2 SinOsc\cf3 .ar(\cf2 Pulse\cf3 .ar(\cf2 LFDClipNoise\cf3 .kr(\cf2 FSinOsc\cf3 .kr(\cf2 LFDNoise0\cf3 .kr.exprange(2.329015648365, 5.6658576369286)).exprange(5.7524713993073, 7.1688629746437)).exprange(17493.377699852, 12252.056541443)).exprange(20, 1514.5543074608)).range(-1, 1)*x; x = \cf2 SinOsc\cf3 .ar(\cf2 Saw\cf3 .ar(236.8047659488767, 0.44683723738699244, 0.829054138877175).exprange(2851.8072915077, 19617.766096592)).range(-1, 1).perform(\cf4 'min'\cf3 , \cf2 LFClipNoise\cf3 .ar(21.63735644548361).range(-0.69784450531006, 0.52837800979614))*x; \cf2 Out\cf3 .ar(out, \cf2 SinOsc\cf3 .ar(\cf2 LFPulse\cf3 .ar(\cf2 LFDClipNoise\cf3 .kr(\cf2 Crackle\cf3 .kr(\cf2 SinOsc\cf3 .kr(\cf2 LFNoise1\cf3 .kr.exprange(2.6018972754478, 4.012377166748)).range(1.6219574213028, 1.6573997735977)).exprange(4.9585550069809, 14.417887604237)).exprange(10485.629107952, 14375.108747482)).exprange(6491.2453985214, 19742.167594433)).range(-1, 1)*x)\}).play(s))\
\
y =(\cf2 SynthDef\cf3 (\cf4 'HomecroftIsocercy'\cf3 , \{\cf2 |out= 0, amp= 1|\cf3  \cf2 Out\cf3 .ar(out, \cf2 SinOsc\cf3 .ar(\cf2 LFPar\cf3 .ar(\cf2 GrayNoise\cf3 .kr(\cf2 LFTri\cf3 .kr(2.824712158369116, \cf2 XLine\cf3 .kr(15966.769420739374, 4098.588770086115, 1.3190846073627471, 0.5569682121276855).range(3.7429804801941, 3.4530572891235)).range(0.080095887184143, 0.19459438323975)).exprange(11843.751437664, 12342.824618816)).exprange(69.612212896347, 5959.7649483681)).range(-1, 1)*amp)\}).play(s))\
\
\
y = (\cf2 SynthDef\cf3 (\cf4 'StonecutterOfficinal'\cf3 , \{\cf2 |out= 0, amp= 1|\cf3  \cf2 Out\cf3 .ar(out, \cf2 SinOsc\cf3 .ar(\cf2 LFPulse\cf3 .ar(\cf2 LFDNoise3\cf3 .kr(\cf2 LFDNoise1\cf3 .kr(\cf2 LFDNoise3\cf3 .kr(\cf2 LFSaw\cf3 .kr(3.257327718653815, 0.7080686092376709).exprange(11.903054368496, 15.460350930691)).exprange(8.1767102122307, 10.093348395824)).exprange(7.5276039838791, 11.692942869663)).exprange(10752.679085732, 16313.406984806)).exprange(349.5465464592, 3839.8340933323)).range(-1, 1)*amp)\}).play(s))\
\
y = (\cf2 SynthDef\cf3 (\cf4 'MangonizeBackvelder'\cf3 , \{\cf2 |out= 0, amp= 1|\cf3  \cf2 Out\cf3 .ar(out, \cf2 SinOsc\cf3 .ar(\cf2 LFCub\cf3 .ar(1631.580066656184, 0.8356766267256303, \cf2 Vibrato\cf3 .ar(470.3219408933291, \cf2 LFPar\cf3 .ar.range(9.3112767219543, 11.335651314259)).range(0.06131899356842, 0.60184729099274)).exprange(252.189453125, 5185.8783071041)).range(-1, 1)*amp)\}).play(s))\
\
y = (\cf2 SynthDef\cf3 (\cf4 'CadmiumPedagogical'\cf3 , \{\cf2 |out= 0, amp= 1|\cf3  \cf2 Out\cf3 .ar(out, \cf2 SinOsc\cf3 .ar(\cf2 Pulse\cf3 .ar(\cf2 LFDNoise0\cf3 .kr(\cf2 LFCub\cf3 .kr(0.808414896252931).exprange(3.2625374555588, 4.9040379881859)).exprange(15479.852640629, 850.02689599991)).exprange(424.13337826729, 2353.7956793308)).range(-1, 1)*amp)\}).play(s))\
\
\
y = (\cf2 SynthDef\cf3 (\cf4 'ThermodynamicistReinterchange'\cf3 , \{ \cf2 arg\cf3  out= 0, amp= 1, ffact = 1; \cf2 Out\cf3 .ar(out, \cf2 SinOsc\cf3 .ar(\cf2 Pulse\cf3 .ar(4092.613120303491 * ffact, \cf2 Impulse\cf3 .kr(\cf2 SyncSaw\cf3 .kr(\cf2 FSinOsc\cf3 .kr(\cf2 Line\cf3 .kr(2261.8961334228516, 5923.852920532227).exprange(17.905752718449, 6.5902675747871) * ffact ).exprange(12.133239972591, 13.562456011772) * ffact ).exprange(5.0877082228661, 4.9762544751167) * ffact).range(0.47346186637878, 0.77896022796631) * ffact ).exprange(1282.6335215569, 19043.487529755) * ffact).range(-1, 1)*amp)\}).play(s))\
\
y.set( \cf4 \\ffact\cf3 , 0.9 );\
y.set( \cf4 \\ffact\cf3 , 3 );\
y.free;\
\
y = (\cf2 SynthDef\cf3 (\cf4 'ThermodynamicistReinterchange'\cf3 , \{ \cf2 arg\cf3  out= 0, amp= 1; \cf2 var\cf3  ffact; ffact = \cf2 LinExp\cf3 .kr( \cf2 SinOsc\cf3 .kr( \cf2 MouseX\cf3 .kr( 0.01, 100, \cf4 \\exponential\cf3  )), -1, 1, 0.1, 3.0 ); \cf2 Out\cf3 .ar(out, \cf2 SinOsc\cf3 .ar(\cf2 Pulse\cf3 .ar(4092.613120303491 * ffact, \cf2 Impulse\cf3 .kr(\cf2 SyncSaw\cf3 .kr(\cf2 FSinOsc\cf3 .kr(\cf2 Line\cf3 .kr(2261.8961334228516, 5923.852920532227).exprange(17.905752718449, 6.5902675747871) * ffact ).exprange(12.133239972591, 13.562456011772) * ffact ).exprange(5.0877082228661, 4.9762544751167) * ffact).range(0.47346186637878, 0.77896022796631) * ffact ).exprange(1282.6335215569, 19043.487529755) * ffact).range(-1, 1)*amp)\}).play(s))\
\
y = (\cf2 SynthDef\cf3 (\cf4 'ThermodynamicistReinterchange'\cf3 , \{ \cf2 arg\cf3  out= 0, amp= 1; \cf2 var\cf3  ffact; ffact = \cf2 LinExp\cf3 .kr( \cf2 LFDNoise1\cf3 .kr( \cf2 MouseY\cf3 .kr( 0.1, 10, \cf4 \\exponential\cf3  )), -1, 1, 1/3, 3.0 ); \cf2 Out\cf3 .ar(out, \cf2 SinOsc\cf3 .ar(\cf2 Pulse\cf3 .ar(4092.613120303491 * ffact, \cf2 Impulse\cf3 .kr(\cf2 SyncSaw\cf3 .kr(\cf2 FSinOsc\cf3 .kr(\cf2 Line\cf3 .kr(2261.8961334228516, 5923.852920532227).exprange(17.905752718449, 6.5902675747871) * ffact ).exprange(12.133239972591, 13.562456011772) * ffact ).exprange(5.0877082228661, 4.9762544751167) * ffact).range(0.47346186637878, 0.77896022796631) * ffact ).exprange(1282.6335215569, 19043.487529755) * ffact).range(-1, 1)*amp)\}).play(s))\
\
y = (\cf2 SynthDef\cf3 (\cf4 'ThermodynamicistReinterchange'\cf3 , \{ \cf2 arg\cf3  out= 0, amp= 1; \cf2 var\cf3  ffact; ffact = \cf2 Latch\cf3 .kr( \cf2 LinExp\cf3 .kr( \cf2 LFDNoise1\cf3 .kr( \cf2 MouseY\cf3 .kr( 0.1, 10, \cf4 \\exponential\cf3  )), -1, 1, 1/3, 3.0 ), \cf2 Dust\cf3 .kr( \cf2 MouseX\cf3 .kr( 0.1, 1000, \cf4 \\exponential\cf3  ))); \cf2 Out\cf3 .ar(out, \cf2 SinOsc\cf3 .ar(\cf2 Pulse\cf3 .ar(4092.613120303491 * ffact, \cf2 Impulse\cf3 .kr(\cf2 SyncSaw\cf3 .kr(\cf2 FSinOsc\cf3 .kr(\cf2 Line\cf3 .kr(2261.8961334228516, 5923.852920532227).exprange(17.905752718449, 6.5902675747871) * ffact ).exprange(12.133239972591, 13.562456011772) * ffact ).exprange(5.0877082228661, 4.9762544751167) * ffact).range(0.47346186637878, 0.77896022796631) * ffact ).exprange(1282.6335215569, 19043.487529755) * ffact).range(-1, 1)*amp)\}).play(s))\
\
\
\
\
y = (\cf2 SynthDef\cf3 (\cf4 'SparkletRifty'\cf3 , \{ \cf2 arg\cf3  out= 0, amp= 1; \cf2 var\cf3  ffact;  ffact = \cf2 LinExp\cf3 .kr( \cf2 SinOsc\cf3 .kr( \cf2 MouseX\cf3 .kr( 0.01, 100, \cf4 \\exponential\cf3  )), -1, 1, 0.1, 3.0 ); \cf2 Out\cf3 .ar(out, \cf2 SinOsc\cf3 .ar(\cf2 SinOscFB\cf3 .ar(3470.5576106640947 * ffact, 0.17816081191554214, \cf2 LFNoise0\cf3 .ar(614.1451177901979 * ffact, \cf2 Vibrato\cf3 .ar(\cf2 LFNoise2\cf3 .ar.exprange(19612.018809319, 14980.336444378) * ffact ).range(0.32902801036835, 0.68674957752228) * ffact ).range(0.65675187110901, 0.8890209197998) * ffact ).exprange(4086.371281147, 5797.3098826408) * ffact ).range(-1, 1)*amp)\}).play(s))\
\
\
y = (\cf2 SynthDef\cf3 (\cf4 'SparkletRifty'\cf3 , \{ \cf2 arg\cf3  out= 0, amp= 1; \cf2 var\cf3  ffact; ffact = \cf2 Latch\cf3 .kr( \cf2 LinExp\cf3 .kr( \cf2 LFDNoise1\cf3 .kr( \cf2 MouseY\cf3 .kr( 0.1, 10, \cf4 \\exponential\cf3  )), -1, 1, 1/20, 0.5 ), \cf2 Dust\cf3 .kr( \cf2 MouseX\cf3 .kr( 0.1, 1000, \cf4 \\exponential\cf3  ))); \cf2 Out\cf3 .ar(out, \cf2 SinOsc\cf3 .ar(\cf2 SinOscFB\cf3 .ar(3470.5576106640947 * ffact, 0.17816081191554214, \cf2 LFNoise0\cf3 .ar(614.1451177901979 * ffact, \cf2 Vibrato\cf3 .ar(\cf2 LFNoise2\cf3 .ar.exprange(19612.018809319, 14980.336444378) * ffact ).range(0.32902801036835, 0.68674957752228) * ffact ).range(0.65675187110901, 0.8890209197998) * ffact ).exprange(4086.371281147, 5797.3098826408) * ffact ).range(-1, 1)*amp)\}).play(s))\
\
\
\
y = (\cf2 SynthDef\cf3 (\cf4 'BoltheadingStibium'\cf3 , \{ \cf2 arg\cf3  out=0, amp=1; \cf2 var\cf3  ffact; ffact = \cf2 Latch\cf3 .kr( \cf2 LinExp\cf3 .kr( \cf2 LFDNoise1\cf3 .kr( \cf2 MouseY\cf3 .kr( 0.1, 10, \cf4 \\exponential\cf3  )), -1, 1, 1/30, 30.0 ), \cf2 Dust\cf3 .kr( \cf2 MouseX\cf3 .kr( 0.1, 1000, \cf4 \\exponential\cf3  ))); \cf2 Out\cf3 .ar(out, \cf2 SinOsc\cf3 .ar(\cf2 Saw\cf3 .ar(236.8047659488767 * ffact, 0.44683723738699244, 0.829054138877175).exprange(2851.8072915077, 19617.766096592) * ffact ).range(-1, 1).perform(\cf4 'min'\cf3 , \cf2 LFClipNoise\cf3 .ar(21.63735644548361 * ffact ).range(-0.69784450531006, 0.52837800979614) * ffact )*amp)\}).play(s))\
\
y = (\cf2 SynthDef\cf3 (\cf4 'RedesignPolyesthetic'\cf3 , \{ \cf2 arg\cf3  out=0, amp=1; \cf2 var\cf3  ffact; ffact = \cf2 Latch\cf3 .kr( \cf2 LinExp\cf3 .kr( \cf2 LFDNoise1\cf3 .kr( \cf2 MouseY\cf3 .kr( 0.1, 10, \cf4 \\exponential\cf3  )), -1, 1, 1/30, 30.0 ), \cf2 Dust\cf3 .kr( \cf2 MouseX\cf3 .kr( 0.1, 1000, \cf4 \\exponential\cf3  ))); \cf2 Out\cf3 .ar(out, \cf2 SinOsc\cf3 .ar(\cf2 SinOscFB\cf3 .ar(222.5110609404171 * ffact, \cf2 LFSaw\cf3 .kr(\cf2 PinkNoise\cf3 .kr(0.017853577931722004, 0.1160733699798584).exprange(14.723705756664, 8.9021488070488) * ffact ).range(0.92265129089355, 0.39499652385712) * ffact ).exprange(318.23692886718, 12940.678257942) * ffact).range(-1, 1)*amp)\}).play(s))\
\
\
(\
\cf2 SynthDef\cf3 ( \cf4 \\mix\cf3 , \{ \cf2 arg\cf3  out = 0, bufNum = 0, amp = 1; \cf2 var\cf3  a, b, c, d, e, f, bufDur;\
a = \cf2 SinOsc\cf3 .ar(\cf2 Pulse\cf3 .ar(4092.613120303491, \cf2 Impulse\cf3 .kr(\cf2 SyncSaw\cf3 .kr(\cf2 FSinOsc\cf3 .kr(\cf2 Line\cf3 .kr(2261.8961334228516, 5923.852920532227).exprange(17.905752718449, 6.5902675747871)).exprange(12.133239972591, 13.562456011772)).exprange(5.0877082228661, 4.9762544751167)).range(0.47346186637878, 0.77896022796631)).exprange(1282.6335215569, 19043.487529755)).range(-1, 1);\
b = \cf2 SinOsc\cf3 .ar(\cf2 Formant\cf3 .ar(\cf2 LFClipNoise\cf3 .kr(\cf2 LFNoise2\cf3 .kr(\cf2 LFPulse\cf3 .kr(3.885018231821549, \cf2 LFPulse\cf3 .kr(\cf2 LFSaw\cf3 .kr(0.9327606842459736, 0.3368704319000244).exprange(1.3561450839043, 16.871727538109)).range(0.70975315570831, 0.48771488666534)).exprange(0.49917863607407, 12.011575996876)).exprange(13.635697317123, 17.799385106564)).exprange(19476.80393219, 5614.4018101692)).exprange(503.95591148455, 17141.464130878)).range(-1, 1);\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf3 bufDur = \cf2 BufDur\cf3 .kr( bufNum );\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f1\fs24 \cf3 c = \cf2 IFFT\cf3 ( 
\f0\fs18 \cf2 PV_PhaseShift90\cf3 ( 
\f1\fs24 \cf2 FFT\cf3 ( bufNum, a )));\
d = \cf2 DelayN\cf3 .ar( a, bufDur, bufDur );\
e = \cf2 IFFT\cf3 ( 
\f0\fs18 \cf2 PV_PhaseShift90\cf3 ( 
\f1\fs24 \cf2 FFT\cf3 ( bufNum, b )));\
f = \cf2 DelayN\cf3 .ar( b, bufDur, bufDur );\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf2 Out\cf3 .ar( out, (d * f) - (c * e) );\
\}).send( s );\
)
\f1\fs24 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf3 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf3 b = \cf2 Buffer\cf3 .alloc(s,2048,1);
\f1\fs24 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf3 y = \cf2 Synth\cf3 ( \cf4 \\mix\cf3 , [ \cf4 \\bufNum\cf3 , b.bufnum]);\
y.free;\
b.free;\
\
(\
\cf2 SynthDef\cf3 ( \cf4 \\mix\cf3 , \{ \cf2 arg\cf3  out = 0, bufNum = 0, amp = 1; \cf2 var\cf3  a, b, c, d, e, f, bufDur, ffact, ffact2;\
ffact = \cf2 Latch\cf3 .kr( \cf2 LinExp\cf3 .kr( \cf2 LFDNoise1\cf3 .kr( \cf2 MouseY\cf3 .kr( 0.1, 10, \cf4 \\exponential\cf3  )), -1, 1, 1/30, 10.0 ), \cf2 Dust\cf3 .kr( \cf2 MouseX\cf3 .kr( 0.1, 1000, \cf4 \\exponential\cf3  )));\
ffact2 = \cf2 Latch\cf3 .kr( \cf2 LinExp\cf3 .kr( \cf2 LFDNoise1\cf3 .kr( \cf2 MouseY\cf3 .kr( 0.1, 10, \cf4 \\exponential\cf3  )), -1, 1, 1/30, 10.0 ), \cf2 Dust\cf3 .kr( \cf2 MouseX\cf3 .kr( 0.1, 1000, \cf4 \\exponential\cf3  )));\
a = \cf2 SinOsc\cf3 .ar(\cf2 Saw\cf3 .ar(236.8047659488767 * ffact, 0.44683723738699244, 0.829054138877175).exprange(2851.8072915077, 19617.766096592) * ffact ).range(-1, 1).perform(\cf4 'min'\cf3 , \cf2 LFClipNoise\cf3 .ar(21.63735644548361 * ffact ).range(-0.69784450531006, 0.52837800979614) * ffact );\
b = \cf2 SinOsc\cf3 .ar(\cf2 SinOscFB\cf3 .ar(222.5110609404171 * ffact2, \cf2 LFSaw\cf3 .kr(\cf2 PinkNoise\cf3 .kr(0.017853577931722004, 0.1160733699798584).exprange(14.723705756664, 8.9021488070488) * ffact2 ).range(0.92265129089355, 0.39499652385712) * ffact2 ).exprange(318.23692886718, 12940.678257942) * ffact2).range(-1, 1);\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf3 bufDur = \cf2 BufDur\cf3 .kr( bufNum );\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f1\fs24 \cf3 c = \cf2 IFFT\cf3 ( 
\f0\fs18 \cf2 PV_PhaseShift90\cf3 ( 
\f1\fs24 \cf2 FFT\cf3 ( bufNum, a )));\
d = \cf2 DelayN\cf3 .ar( a, bufDur, bufDur );\
e = \cf2 IFFT\cf3 ( 
\f0\fs18 \cf2 PV_PhaseShift90\cf3 ( 
\f1\fs24 \cf2 FFT\cf3 ( bufNum, b )));\
f = \cf2 DelayN\cf3 .ar( b, bufDur, bufDur );\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf2 Out\cf3 .ar( out, ((d * f) - (c * e)) * amp );\
\}).send( s );\
)\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f1\fs24 \cf3 (\
\cf5 // LustrelessReceder versus KneaderSnee\cf3 \
\cf2 SynthDef\cf3 ( \cf4 \\mix\cf3 , \{ \cf2 arg\cf3  out = 0, bufNum = 0, amp = 1; \cf2 var\cf3  a, b, c, d, e, f, bufDur, ffact, ffact2;\
ffact = \cf2 Latch\cf3 .kr( \cf2 LinExp\cf3 .kr( \cf2 LFDNoise1\cf3 .kr( \cf2 MouseY\cf3 .kr( 0.1, 10, \cf4 \\exponential\cf3  )), -1, 1, 1/10, 10 ), \cf2 Dust\cf3 .kr( \cf2 MouseX\cf3 .kr( 0.1, 1000, \cf4 \\exponential\cf3  )));\
ffact2 = \cf2 Latch\cf3 .kr( \cf2 LinExp\cf3 .kr( \cf2 LFDNoise1\cf3 .kr( \cf2 MouseY\cf3 .kr( 0.1, 10, \cf4 \\exponential\cf3  )), -1, 1, 1/10, 3 ), \cf2 Dust\cf3 .kr( \cf2 MouseX\cf3 .kr( 0.1, 1000, \cf4 \\exponential\cf3  )));\
\cf5 //ffact = 1;\cf3 \
\cf5 //ffact2 = 1;\cf3 \
a = \cf2 SinOsc\cf3 .ar( max( 0.1, \cf2 Saw\cf3 .ar( max( 0.1, \cf2 BrownNoise\cf3 .kr( max( 0.1, \cf2 LFPar\cf3 .kr( max( 0.1, \cf2 LFDNoise0\cf3 .kr( max( 0.1, 2.3321529414168967 * ffact ), 0.10901248455047609).exprange(12.337117159367, 13.717201220989) * ffact )).range(0.14796626567841, 0.62266230583191) * ffact )).exprange(9431.6104435921, 14194.282369614) * ffact )).exprange(723.5537071228, 4939.3897080421) * ffact )).range(-1, 1);\
b = \cf2 SinOsc\cf3 .ar( max( 0.1, \cf2 LFTri\cf3 .ar( max( 0.1, \cf2 Pulse\cf3 .ar(max( 0.1, \cf2 LFDNoise1\cf3 .ar.exprange(6907.3509025574, 916.96028470993) * ffact2 )).exprange(7814.762532711, 17008.38572979) * ffact2 )).exprange(899.76963162422, 5784.4645884037) * ffact2 )).range(-1, 1);\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf3 bufDur = \cf2 BufDur\cf3 .kr( bufNum );\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f1\fs24 \cf3 c = \cf2 IFFT\cf3 ( 
\f0\fs18 \cf2 PV_PhaseShift90\cf3 ( 
\f1\fs24 \cf2 FFT\cf3 ( bufNum, a )));\
d = \cf2 DelayN\cf3 .ar( a, bufDur, bufDur );\
e = \cf2 IFFT\cf3 ( 
\f0\fs18 \cf2 PV_PhaseShift90\cf3 ( 
\f1\fs24 \cf2 FFT\cf3 ( bufNum, b )));\
f = \cf2 DelayN\cf3 .ar( b, bufDur, bufDur );\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf2 Out\cf3 .ar( out, ((d * f) - (c * e)) * amp );\
\}).send( s );\
)\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f1\fs24 \cf3 (\
\cf2 SynthDef\cf3 ( \cf4 \\switch\cf3 , \{ \cf2 arg\cf3  out = 0, amp = 1; \cf2 var\cf3  a, b, c, d, e, f, which, ffact;\
ffact = \cf2 Latch\cf3 .kr( \cf2 LinExp\cf3 .kr( \cf2 LFDNoise1\cf3 .kr( \cf2 MouseY\cf3 .kr( 0.1, 10, \cf4 \\exponential\cf3  )), -1, 1, 1/10, 10 ), \cf2 Dust\cf3 .kr( \cf2 MouseX\cf3 .kr( 0.1, 1000, \cf4 \\exponential\cf3  )));\
a = \cf2 SinOsc\cf3 .ar(\cf2 LFPulse\cf3 .ar(\cf2 LFDNoise3\cf3 .kr(\cf2 LFDNoise1\cf3 .kr(\cf2 LFDNoise3\cf3 .kr(\cf2 LFSaw\cf3 .kr(3.257327718653815, 0.7080686092376709).exprange(11.903054368496, 15.460350930691)).exprange(8.1767102122307, 10.093348395824)).exprange(7.5276039838791, 11.692942869663)).exprange(10752.679085732, 16313.406984806)).exprange(349.5465464592, 3839.8340933323)).range(-1, 1);\
b = \cf2 SinOsc\cf3 .ar(\cf2 LFCub\cf3 .ar(1631.580066656184, 0.8356766267256303, \cf2 Vibrato\cf3 .ar(470.3219408933291, \cf2 LFPar\cf3 .ar.range(9.3112767219543, 11.335651314259)).range(0.06131899356842, 0.60184729099274)).exprange(252.189453125, 5185.8783071041)).range(-1, 1);\
c = \cf2 SinOsc\cf3 .ar(\cf2 Pulse\cf3 .ar(\cf2 LFDNoise0\cf3 .kr(\cf2 LFCub\cf3 .kr(0.808414896252931).exprange(3.2625374555588, 4.9040379881859)).exprange(15479.852640629, 850.02689599991)).exprange(424.13337826729, 2353.7956793308)).range(-1, 1);\
which = \cf2 SinOsc\cf3 .ar(\cf2 LFPar\cf3 .ar(\cf2 GrayNoise\cf3 .kr(\cf2 LFTri\cf3 .kr(2.824712158369116 * ffact, \cf2 XLine\cf3 .kr(15966.769420739374, 4098.588770086115, 1.3190846073627471, 0.5569682121276855).range(3.7429804801941, 3.4530572891235) * ffact).range(0.080095887184143, 0.19459438323975)* ffact).exprange(11843.751437664, 12342.824618816)* ffact).exprange(69.612212896347, 5959.7649483681)* ffact).range( 0, 3 );\
\cf2 Out\cf3 .ar( out, \cf2 Median\cf3 .ar( in: \cf2 Select\cf3 .ar( which, [ a, b, c ])));\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 \}).send( s );\
)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf3 \
y = \cf2 Synth\cf3 ( \cf4 \\switch\cf3  );\
y.free;\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf3 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f1\fs24 \cf3 (\
\cf2 SynthDef\cf3 ( \cf4 \\switch2\cf3 , \{ \cf2 arg\cf3  out = 0, amp = 1, bufNum = 0; \cf2 var\cf3  a, b, c, d, e, which, ffact, ffact2, bufDur, f, g, h, j;\
ffact = \cf2 Latch\cf3 .kr( \cf2 LinExp\cf3 .kr( \cf2 LFDNoise1\cf3 .kr( \cf2 MouseY\cf3 .kr( 0.1, 10, \cf4 \\exponential\cf3  )), -1, 1, 1/100, 10 ), \cf2 Dust\cf3 .kr( \cf2 MouseX\cf3 .kr( 0.1, 1000, \cf4 \\exponential\cf3  )));\
ffact2 = \cf2 Latch\cf3 .kr( \cf2 LinExp\cf3 .kr( \cf2 LFDNoise1\cf3 .kr( \cf2 MouseY\cf3 .kr( 0.1, 10, \cf4 \\exponential\cf3  )), -1, 1, 1/10, 3 ), \cf2 Dust\cf3 .kr( \cf2 MouseX\cf3 .kr( 0.1, 1000, \cf4 \\exponential\cf3  )));\
a = \cf2 SinOsc\cf3 .ar(\cf2 LFPulse\cf3 .ar(\cf2 LFDNoise3\cf3 .kr(\cf2 LFDNoise1\cf3 .kr(\cf2 LFDNoise3\cf3 .kr(\cf2 LFSaw\cf3 .kr(3.257327718653815 * ffact2, 0.7080686092376709).exprange(11.903054368496, 15.460350930691) * ffact2 ).exprange(8.1767102122307, 10.093348395824) * ffact2 ).exprange(7.5276039838791, 11.692942869663) * ffact2 ).exprange(10752.679085732, 16313.406984806) * ffact2 ).exprange(349.5465464592, 3839.8340933323) * ffact2 ).range(-1, 1);\
b = \cf2 SinOsc\cf3 .ar(\cf2 LFCub\cf3 .ar(1631.580066656184 * ffact2, 0.8356766267256303, \cf2 Vibrato\cf3 .ar(470.3219408933291 * ffact2, \cf2 LFPar\cf3 .ar.range(9.3112767219543, 11.335651314259) * ffact2 ).range(0.06131899356842, 0.60184729099274) * ffact2 ).exprange(252.189453125, 5185.8783071041) * ffact2 ).range(-1, 1);\
c = \cf2 SinOsc\cf3 .ar(\cf2 Pulse\cf3 .ar(\cf2 LFDNoise0\cf3 .kr(\cf2 LFCub\cf3 .kr(0.808414896252931 * ffact2 ).exprange(3.2625374555588, 4.9040379881859) * ffact2 ).exprange(15479.852640629, 850.02689599991) * ffact2 ).exprange(424.13337826729, 2353.7956793308) * ffact2 ).range(-1, 1);\
which = \cf2 SinOsc\cf3 .ar(\cf2 LFPar\cf3 .ar(\cf2 GrayNoise\cf3 .kr(\cf2 LFTri\cf3 .kr(2.824712158369116 * ffact, \cf2 XLine\cf3 .kr(15966.769420739374, 4098.588770086115, 1.3190846073627471, 0.5569682121276855).range(3.7429804801941, 3.4530572891235) * ffact).range(0.080095887184143, 0.19459438323975)* ffact).exprange(11843.751437664, 12342.824618816)* ffact).exprange(69.612212896347, 5959.7649483681)* ffact).range( 0, 1 );\
\cf5 //d = Median.ar( in: Select.ar( which, [ a, b, c ]));\cf3 \
\cf5 //e = Median.ar( in: Select.ar( (which + 1) % 3, [ a, b, c ]));\cf3 \
d = (a * which) + (b * (1 - which));\
e = (b * which) + (c * (1 - which));\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf3 bufDur = \cf2 BufDur\cf3 .kr( bufNum );\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f1\fs24 \cf3 f = \cf2 IFFT\cf3 ( 
\f0\fs18 \cf2 PV_PhaseShift90\cf3 ( 
\f1\fs24 \cf2 FFT\cf3 ( bufNum, d )));\
g = \cf2 DelayN\cf3 .ar( d, bufDur, bufDur );\
h = \cf2 IFFT\cf3 ( 
\f0\fs18 \cf2 PV_PhaseShift90\cf3 ( 
\f1\fs24 \cf2 FFT\cf3 ( bufNum, e )));\
j = \cf2 DelayN\cf3 .ar( e, bufDur, bufDur );\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf2 Out\cf3 .ar( out, ((f * h) - (g * j)) * amp );\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs24 \cf3 \}).send( s );\
)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf3 \
b = \cf2 Buffer\cf3 .alloc(s,2048,1);
\f1\fs24 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf3 y = \cf2 Synth\cf3 ( \cf4 \\switch2\cf3 , [ \cf4 \\bufNum\cf3 , b.bufnum ] );\
\cf0 y.free;\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf3 \
\cf0 (\
\cf6 SynthDef\cf0 ( \cf7 \\switch3\cf0 , \{ \cf6 arg\cf0  out = 0, amp = 1, bufNum = 0; \cf6 var\cf0  a, b, c, d, e, which, ffact, ffact2, bufDur, f, g, h, j;\
ffact = \cf6 Latch\cf0 .kr( \cf6 LinExp\cf0 .kr( \cf6 LFDNoise1\cf0 .kr( \cf6 MouseY\cf0 .kr( 0.1, 10, \cf7 \\exponential\cf0  )), -1, 1, 1/100, 10 ), \cf6 Dust\cf0 .kr( \cf6 MouseX\cf0 .kr( 0.1, 1000, \cf7 \\exponential\cf0  )));\
ffact2 = \cf6 Latch\cf0 .kr( \cf6 LinExp\cf0 .kr( \cf6 LFDNoise1\cf0 .kr( \cf6 MouseY\cf0 .kr( 0.1, 10, \cf7 \\exponential\cf0  )), -1, 1, 1/10, 3 ), \cf6 Dust\cf0 .kr( \cf6 MouseX\cf0 .kr( 0.1, 1000, \cf7 \\exponential\cf0  )));\
a = \cf6 Impulse\cf0 .ar(\cf6 LFPulse\cf0 .ar(\cf6 LFDNoise3\cf0 .kr(\cf6 LFDNoise1\cf0 .kr(\cf6 LFDNoise3\cf0 .kr(\cf6 LFSaw\cf0 .kr(3.257327718653815 * ffact2, 0.7080686092376709).exprange(11.903054368496, 15.460350930691) * ffact2 ).exprange(8.1767102122307, 10.093348395824) * ffact2 ).exprange(7.5276039838791, 11.692942869663) * ffact2 ).exprange(10752.679085732, 16313.406984806) * ffact2 ).exprange(349.5465464592, 3839.8340933323) * ffact2 ).range(-1, 1);\
b = \cf6 Impulse\cf0 .ar(\cf6 LFCub\cf0 .ar(1631.580066656184 * ffact2, 0.8356766267256303, \cf6 Vibrato\cf0 .ar(470.3219408933291 * ffact2, \cf6 LFPar\cf0 .ar.range(9.3112767219543, 11.335651314259) * ffact2 ).range(0.06131899356842, 0.60184729099274) * ffact2 ).exprange(252.189453125, 5185.8783071041) * ffact2 ).range(-1, 1);\
c = \cf6 Impulse\cf0 .ar(\cf6 Pulse\cf0 .ar(\cf6 LFDNoise0\cf0 .kr(\cf6 LFCub\cf0 .kr(0.808414896252931 * ffact2 ).exprange(3.2625374555588, 4.9040379881859) * ffact2 ).exprange(15479.852640629, 850.02689599991) * ffact2 ).exprange(424.13337826729, 2353.7956793308) * ffact2 ).range(-1, 1);\
which = \cf6 LFTri\cf0 .ar(\cf6 LFPar\cf0 .ar(\cf6 GrayNoise\cf0 .kr(\cf6 LFTri\cf0 .kr(2.824712158369116 * ffact, \cf6 XLine\cf0 .kr(15966.769420739374, 4098.588770086115, 1.3190846073627471, 0.5569682121276855).range(3.7429804801941, 3.4530572891235) * ffact).range(0.080095887184143, 0.19459438323975)* ffact).exprange(11843.751437664, 12342.824618816)* ffact).exprange(69.612212896347, 5959.7649483681)* ffact).range( 0, 1 );\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf8 //d = Median.ar( in: Select.ar( which, [ a, b, c ]));\cf0 \
\cf8 //e = Median.ar( in: Select.ar( (which + 1) % 3, [ a, b, c ]));\cf0 \
d = (a * which) + (b * (1 - which));\
e = (b * which) + (c * (1 - which));\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf0 bufDur = \cf6 BufDur\cf0 .kr( bufNum );\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f1\fs24 \cf0 f = \cf6 IFFT\cf0 ( 
\f0\fs18 \cf6 PV_PhaseShift90\cf0 ( 
\f1\fs24 \cf6 FFT\cf0 ( bufNum, d )));\
g = \cf6 DelayN\cf0 .ar( d, bufDur, bufDur );\
h = \cf6 IFFT\cf0 ( 
\f0\fs18 \cf6 PV_PhaseShift90\cf0 ( 
\f1\fs24 \cf6 FFT\cf0 ( bufNum, e )));\
j = \cf6 DelayN\cf0 .ar( e, bufDur, bufDur );\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf6 Out\cf0 .ar( out, ((f * h) - (g * j)) * amp );\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs24 \cf0 \}).send( s );\
)\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf0 y.free;\
y = \cf6 Synth\cf0 ( \cf7 \\switch3\cf0 , [ \cf7 \\bufNum\cf0 , b.bufnum ] );\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf0 (\
\cf6 SynthDef\cf0 ( \cf7 \\switch4\cf0 , \{ \cf6 arg\cf0  out = 0, amp = 1, bufNum = 0; \cf6 var\cf0  a, b, c, d, e, which, ffact, ffact2, bufDur, f, g, h, j;\
ffact = \cf6 Latch\cf0 .kr( \cf6 LinExp\cf0 .kr( \cf6 LFDNoise1\cf0 .kr( \cf6 MouseY\cf0 .kr( 0.1, 10, \cf7 \\exponential\cf0  )), -1, 1, 1/100, 10 ), \cf6 Dust\cf0 .kr( \cf6 MouseX\cf0 .kr( 0.1, 1000, \cf7 \\exponential\cf0  )));\
ffact2 = \cf6 Latch\cf0 .kr( \cf6 LinExp\cf0 .kr( \cf6 LFDNoise1\cf0 .kr( \cf6 MouseY\cf0 .kr( 0.1, 10, \cf7 \\exponential\cf0  )), -1, 1, 1/100, 3 ), \cf6 Dust\cf0 .kr( \cf6 MouseX\cf0 .kr( 0.1, 1000, \cf7 \\exponential\cf0  )));\
a = \cf6 Impulse\cf0 .ar(\cf6 LFTri\cf0 .ar(\cf6 LFDNoise1\cf0 .kr(\cf6 LFDNoise1\cf0 .kr(\cf6 LFDNoise1\cf0 .kr(\cf6 LFTri\cf0 .kr(3.257327718653815 * ffact2, 0.7080686092376709).exprange(11.903054368496, 15.460350930691) * ffact2 ).exprange(8.1767102122307, 10.093348395824) * ffact2 ).exprange(7.5276039838791, 11.692942869663) * ffact2 ).exprange(10752.679085732, 16313.406984806) * ffact2 ).exprange(349.5465464592, 3839.8340933323) * ffact2 ).range(-1, 1);\
b = \cf6 Impulse\cf0 .ar(\cf6 LFTri\cf0 .ar(1631.580066656184 * ffact2, 0.8356766267256303, \cf6 Vibrato\cf0 .ar(470.3219408933291 * ffact2, \cf6 LFTri\cf0 .ar.range(9.3112767219543, 11.335651314259) * ffact2 ).range(0.06131899356842, 0.60184729099274) * ffact2 ).exprange(252.189453125, 5185.8783071041) * ffact2 ).range(-1, 1);\
c = \cf6 Impulse\cf0 .ar(\cf6 Pulse\cf0 .ar(\cf6 LFDNoise0\cf0 .kr(\cf6 LFTri\cf0 .kr(0.808414896252931 * ffact2 ).exprange(3.2625374555588, 4.9040379881859) * ffact2 ).exprange(15479.852640629, 850.02689599991) * ffact2 ).exprange(424.13337826729, 2353.7956793308) * ffact2 ).range(-1, 1);\
which = \cf6 LFTri\cf0 .ar(\cf6 LFTri\cf0 .ar(\cf6 GrayNoise\cf0 .kr(\cf6 LFTri\cf0 .kr(2.824712158369116 * ffact, \cf6 XLine\cf0 .kr(15966.769420739374, 4098.588770086115, 1.3190846073627471, 0.5569682121276855).range(3.7429804801941, 3.4530572891235) * ffact).range(0.080095887184143, 0.19459438323975)* ffact).exprange(11843.751437664, 12342.824618816)* ffact).exprange(69.612212896347, 5959.7649483681)* ffact).range( 0, 1 );\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf8 //d = Median.ar( in: Select.ar( which, [ a, b, c ]));\cf0 \
\cf8 //e = Median.ar( in: Select.ar( (which + 1) % 3, [ a, b, c ]));\cf0 \
d = (a * which) + (b * (1 - which));\
e = (b * which) + (c * (1 - which));\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf0 bufDur = \cf6 BufDur\cf0 .kr( bufNum );\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f1\fs24 \cf0 f = \cf6 IFFT\cf0 ( 
\f0\fs18 \cf6 PV_PhaseShift90\cf0 ( 
\f1\fs24 \cf6 FFT\cf0 ( bufNum, d )));\
g = \cf6 DelayN\cf0 .ar( d, bufDur, bufDur );\
h = \cf6 IFFT\cf0 ( 
\f0\fs18 \cf6 PV_PhaseShift90\cf0 ( 
\f1\fs24 \cf6 FFT\cf0 ( bufNum, e )));\
j = \cf6 DelayN\cf0 .ar( e, bufDur, bufDur );\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf6 Out\cf0 .ar( out, ((f * h) - (g * j)) * amp );\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs24 \cf0 \}).send( s );\
)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf0 y = \cf6 Synth\cf0 ( \cf7 \\switch4\cf0 , [ \cf7 \\bufNum\cf0 , b.bufnum ] );\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf0 (\
\cf6 SynthDef\cf0 ( \cf7 \\switch5\cf0 , \{ \cf6 arg\cf0  out = 0, amp = 1, bufNum = 0; \cf6 var\cf0  a, b, c, d, e, which, ffact, ffact2, bufDur, f, g, h, j;\
ffact = \cf6 Latch\cf0 .ar( \cf6 LinExp\cf0 .ar( \cf6 LFDNoise1\cf0 .ar( \cf6 MouseY\cf0 .kr( 0.1, 10, \cf7 \\exponential\cf0  )), -1, 1, 1/100, 10 ), \cf6 Dust\cf0 .ar( \cf6 MouseX\cf0 .kr( 0.1, 1000, \cf7 \\exponential\cf0  )));\
ffact2 = \cf6 Latch\cf0 .ar( \cf6 LinExp\cf0 .ar( \cf6 LFDNoise1\cf0 .ar( \cf6 MouseY\cf0 .kr( 0.1, 10, \cf7 \\exponential\cf0  )), -1, 1, 1/100, 3 ), \cf6 Dust\cf0 .ar( \cf6 MouseX\cf0 .kr( 0.1, 1000, \cf7 \\exponential\cf0  )));\
a = \cf6 Impulse\cf0 .ar(\cf6 LFTri\cf0 .ar(\cf6 LFDNoise1\cf0 .ar(\cf6 LFDNoise1\cf0 .ar(\cf6 LFDNoise1\cf0 .ar(\cf6 LFTri\cf0 .ar(3.257327718653815 * ffact2, 0.7080686092376709).exprange(11.903054368496, 15.460350930691) * ffact2 ).exprange(8.1767102122307, 10.093348395824) * ffact2 ).exprange(7.5276039838791, 11.692942869663) * ffact2 ).exprange(10752.679085732, 16313.406984806) * ffact2 ).exprange(349.5465464592, 3839.8340933323) * ffact2 ).range(-1, 1);\
b = \cf6 Impulse\cf0 .ar(\cf6 LFTri\cf0 .ar(1631.580066656184 * ffact2, 0.8356766267256303, \cf6 Vibrato\cf0 .ar(470.3219408933291 * ffact2, \cf6 LFTri\cf0 .ar.range(9.3112767219543, 11.335651314259) * ffact2 ).range(0.06131899356842, 0.60184729099274) * ffact2 ).exprange(252.189453125, 5185.8783071041) * ffact2 ).range(-1, 1);\
c = \cf6 Impulse\cf0 .ar(\cf6 Pulse\cf0 .ar(\cf6 LFDNoise0\cf0 .ar(\cf6 LFTri\cf0 .ar(0.808414896252931 * ffact2 ).exprange(3.2625374555588, 4.9040379881859) * ffact2 ).exprange(15479.852640629, 850.02689599991) * ffact2 ).exprange(424.13337826729, 2353.7956793308) * ffact2 ).range(-1, 1);\
which = \cf6 LFTri\cf0 .ar(\cf6 LFTri\cf0 .ar(\cf6 GrayNoise\cf0 .ar(\cf6 LFTri\cf0 .ar(2.824712158369116 * ffact, \cf6 XLine\cf0 .ar(15966.769420739374, 4098.588770086115, 1.3190846073627471, 0.5569682121276855).range(3.7429804801941, 3.4530572891235) * ffact).range(0.080095887184143, 0.19459438323975)* ffact).exprange(11843.751437664, 12342.824618816)* ffact).exprange(69.612212896347, 5959.7649483681)* ffact).range( 0, 1 );\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf8 //d = Median.ar( in: Select.ar( which, [ a, b, c ]));\cf0 \
\cf8 //e = Median.ar( in: Select.ar( (which + 1) % 3, [ a, b, c ]));\cf0 \
d = (a * which) + (b * (1 - which));\
e = (b * which) + (c * (1 - which));\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf0 bufDur = \cf6 BufDur\cf0 .kr( bufNum );\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f1\fs24 \cf0 f = \cf6 IFFT\cf0 ( 
\f0\fs18 \cf6 PV_PhaseShift90\cf0 ( 
\f1\fs24 \cf6 FFT\cf0 ( bufNum, d )));\
g = \cf6 DelayN\cf0 .ar( d, bufDur, bufDur );\
h = \cf6 IFFT\cf0 ( 
\f0\fs18 \cf6 PV_PhaseShift90\cf0 ( 
\f1\fs24 \cf6 FFT\cf0 ( bufNum, e )));\
j = \cf6 DelayN\cf0 .ar( e, bufDur, bufDur );\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf6 Out\cf0 .ar( out, ((f * h) - (g * j)) * amp );\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs24 \cf0 \}).send( s );\
)\
\
y.free;\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf0 y = \cf6 Synth\cf0 ( \cf7 \\switch5\cf0 , [ \cf7 \\bufNum\cf0 , b.bufnum ] );\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf3 \
\cf2 SynthDef\cf3 ( \cf4 \\lim\cf3 , \{ \cf2 ReplaceOut\cf3 .ar( 0, \cf2 Limiter\cf3 .ar( \cf2 In\cf3 .ar( 0, 2 ), -0.2.dbamp )); \}).send( s );\
x = \cf2 Synth\cf3 ( \cf4 \\lim\cf3 , addAction: \cf4 \\addToTail\cf3  );\
\cf2 SynthDef\cf3 ( \cf4 \\test\cf3 , \{ \cf2 ReplaceOut\cf3 .ar( 0, \cf2 In\cf3 .ar( 0, 2 ) * \cf2 Decay\cf3 .ar( \cf2 Impulse\cf3 .ar( \cf2 MouseX\cf3 .kr( 0.1, 100.0, \cf4 \\exponential\cf3  )), 0.1 )); \}).send( s );\
\cf2 SynthDef\cf3 ( \cf4 \\test\cf3 , \{ \cf2 ReplaceOut\cf3 .ar( 0, \cf2 In\cf3 .ar( 0, 2 ) * \cf2 Decay\cf3 .ar( \cf2 Impulse\cf3 .ar( \cf2 MouseX\cf3 .kr( 0.1, 100.0, \cf4 \\exponential\cf3  )) + \cf2 Impulse\cf3 .ar( \cf2 MouseY\cf3 .kr( 0.1, 10.0, \cf4 \\exponential\cf3  )), 0.1 )); \}).send( s );\
z = \cf2 Synth\cf3 ( \cf4 \\test\cf3 , target: x, addAction: \cf4 \\addBefore\cf3  );\
z.free;\
\
s.sendMsg( \cf4 '/n_free'\cf3 , 1000 );\
s.sendMsg( \cf4 '/n_free'\cf3 , 1009 );\
s.sendMsg( \cf4 '/n_free'\cf3 , 1004 );\
s.sendMsg( \cf4 '/n_free'\cf3 , 1003 );\
y.free;\
\
z.set( \cf4 \\lofreq\cf3 , 6000 );\
z.set( \cf4 \\hifreq\cf3 , 6000 );\
z.set( \cf4 \\hirq\cf3 , 1 );\
z.set( \cf4 \\lorq\cf3 , 0.1 );\
z.set( \cf4 \\lofreq\cf3 , 60 );\
z.set( \cf4 \\hifreq\cf3 , 60);\
z.set( \cf4 \\hirq\cf3 , 3 );\
z.set( \cf4 \\lorq\cf3 , 3 );\
z.set( \cf4 \\hirq\cf3 , 10 );\
z.set( \cf4 \\lorq\cf3 , 10 );\
\
(\
\cf2 SynthDef\cf3 ( \cf4 \\test\cf3 , \{ \cf2 arg\cf3  lofreq = 440, hifreq = 20000, lorq = 0.02, hirq = 0.1; \cf2 var\cf3  dec, freq, imp, dec2, dec3, rq;\
imp = \cf2 Impulse\cf3 .ar( \cf2 MouseX\cf3 .kr( 0.1, 100.0, \cf4 \\exponential\cf3  )) + \cf2 Impulse\cf3 .ar( \cf2 MouseY\cf3 .kr( 0.1, 10.0, \cf4 \\exponential\cf3  ));\
dec = \cf2 Decay\cf3 .ar( imp, 0.1 );\
dec2 = \cf2 Decay\cf3 .ar( imp, 0.01 );\
dec3 = \cf2 Decay\cf3 .ar( imp, 0.04 );\
freq = \cf2 LinExp\cf3 .ar( (dec2.neg + 1).clip( 0, 1 ), 0, 1, lofreq, hifreq );\
\cf5 // rq	= 1.0;\cf3 \
rq	= \cf2 LinExp\cf3 .ar( (dec3.neg + 1).clip( 0, 1 ), 0, 1, lorq, hirq );\
\cf2 ReplaceOut\cf3 .ar( 0, \cf2 RLPF\cf3 .ar( \cf2 In\cf3 .ar( 0, 2 ) * dec, freq, rq ));\
\}).send( s );\
)\
}